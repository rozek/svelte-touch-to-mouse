{"version":3,"file":"svelte-touch-to-mouse.js","sources":["svelte-touch-to-mouse.ts"],"sourcesContent":["// see https://stackoverflow.com/questions/1517924/javascript-mapping-touch-events-to-mouse-events\n// and https://stackoverflow.com/questions/5885808/includes-touch-events-clientx-y-scrolling-or-not\n\n// Important!\n// for all elements affected by \"mapTouchToMouseFor\" (i.e., for all elements\n// selected by \"Selector\"), don't forget to set the following style properties\n//\n// -webkit-touch-callout:none;\n// -ms-touch-action: none; touch-action: none;\n//\n// either in a stylesheet or inline\n\n  function mapTouchToMouseFor (Selector:string):void {\n    function TouchEventMapper (originalEvent:TouchEvent):void {\n      let Target = originalEvent.target as Element\n      if (! Target.matches(Selector)) { return }\n\n      let simulatedEventType\n      switch (originalEvent.type) {\n        case 'touchstart':  simulatedEventType = 'mousedown'; break\n        case 'touchmove':   simulatedEventType = 'mousemove'; break\n        case 'touchend':    simulatedEventType = 'mouseup';   break\n        case 'touchcancel': simulatedEventType = 'mouseup';   break\n        default:            return\n      }\n\n      let firstTouch = originalEvent.changedTouches[0]\n\n      let clientX = firstTouch.clientX, pageX = firstTouch.pageX, PageXOffset = window.pageXOffset\n      let clientY = firstTouch.clientY, pageY = firstTouch.pageY, PageYOffset = window.pageYOffset\n      if (\n        (pageX === 0) && (Math.floor(clientX) > Math.floor(pageX)) ||\n        (pageY === 0) && (Math.floor(clientY) > Math.floor(pageY))\n      ) {\n        clientX -= PageXOffset\n        clientY -= PageYOffset\n      } else if (\n        (clientX < pageX - PageXOffset) || (clientY < pageY - PageYOffset)\n      ) {\n        clientX = pageX - PageXOffset\n        clientY = pageY - PageYOffset\n      }\n\n      let simulatedEvent = new MouseEvent(simulatedEventType, {\n        bubbles:true, cancelable:true,\n        screenX:firstTouch.screenX, screenY:firstTouch.screenY,\n        clientX, clientY, buttons:1, button:0,\n        ctrlKey:originalEvent.ctrlKey, shiftKey:originalEvent.shiftKey,\n        altKey:originalEvent.altKey, metaKey:originalEvent.metaKey\n      })\n\n      firstTouch.target.dispatchEvent(simulatedEvent)\n      originalEvent.preventDefault()\n    }\n\n    document.addEventListener('touchstart',  TouchEventMapper, true)\n    document.addEventListener('touchmove',   TouchEventMapper, true)\n    document.addEventListener('touchend',    TouchEventMapper, true)\n    document.addEventListener('touchcancel', TouchEventMapper, true)\n  }\n\n  export default mapTouchToMouseFor\n"],"names":["Selector","TouchEventMapper","originalEvent","target","matches","simulatedEventType","type","firstTouch","changedTouches","clientX","pageX","PageXOffset","window","pageXOffset","clientY","pageY","PageYOffset","pageYOffset","Math","floor","simulatedEvent","MouseEvent","bubbles","cancelable","screenX","screenY","buttons","button","ctrlKey","shiftKey","altKey","metaKey","dispatchEvent","preventDefault","document","addEventListener"],"mappings":"gWAYE,SAA6BA,GAC3B,SAASC,EAAkBC,GAEzB,GADaA,EAAcC,OACdC,QAAQJ,GAArB,CAEA,IAAIK,EACJ,OAAQH,EAAcI,MACpB,IAAK,aAAeD,EAAqB,YAAa,MACtD,IAAK,YAAeA,EAAqB,YAAa,MACtD,IAAK,WACL,IAAK,cAAeA,EAAqB,UAAa,MACtD,QAAoB,OAGtB,IAAIE,EAAaL,EAAcM,eAAe,GAE1CC,EAAUF,EAAWE,QAASC,EAAQH,EAAWG,MAAOC,EAAcC,OAAOC,YAC7EC,EAAUP,EAAWO,QAASC,EAAQR,EAAWQ,MAAOC,EAAcJ,OAAOK,YAEpE,IAAVP,GAAiBQ,KAAKC,MAAMV,GAAWS,KAAKC,MAAMT,IACxC,IAAVK,GAAiBG,KAAKC,MAAML,GAAWI,KAAKC,MAAMJ,IAEnDN,GAAWE,EACXG,GAAWE,IAEVP,EAAUC,EAAQC,GAAiBG,EAAUC,EAAQC,KAEtDP,EAAUC,EAAQC,EAClBG,EAAUC,EAAQC,GAGpB,IAAII,EAAiB,IAAIC,WAAWhB,EAAoB,CACtDiB,SAAQ,EAAMC,YAAW,EACzBC,QAAQjB,EAAWiB,QAASC,QAAQlB,EAAWkB,QAC/ChB,UAASK,UAASY,QAAQ,EAAGC,OAAO,EACpCC,QAAQ1B,EAAc0B,QAASC,SAAS3B,EAAc2B,SACtDC,OAAO5B,EAAc4B,OAAQC,QAAQ7B,EAAc6B,UAGrDxB,EAAWJ,OAAO6B,cAAcZ,GAChClB,EAAc+B,kBAGhBC,SAASC,iBAAiB,aAAelC,GAAkB,GAC3DiC,SAASC,iBAAiB,YAAelC,GAAkB,GAC3DiC,SAASC,iBAAiB,WAAelC,GAAkB,GAC3DiC,SAASC,iBAAiB,cAAelC,GAAkB"}